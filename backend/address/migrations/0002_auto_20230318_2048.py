# Generated by Django 3.2.15 on 2023-03-18 20:48

from django.conf import settings
from django.db import migrations
import requests
from address.coordinates import fetch_coordinates


def create_addresses(apps, schema_editor):
    Address = apps.get_model('address', 'Address')
    Order = apps.get_model('foodcartapp', 'Order')
    orders = Order.objects.all()
    api_key = settings.YANDEX_GEO_APIKEY
    for order in orders:
        address, status = Address.objects.get_or_create(
            address=order.address,
        )
        if not address.latitude or not address.longitude:
            try:
                address.latitude, address.longitude = fetch_coordinates(
                    api_key,
                    order.address,
                )
            except (requests.exceptions.HTTPError, KeyError) as err:
                pass
            address.save()


def move_backward(apps, schema_editor):
    Address = apps.get_model('address', 'Address')
    Address.objects.all().delete()
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('address', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_addresses, move_backward)
    ]
